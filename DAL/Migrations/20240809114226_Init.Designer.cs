// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240809114226_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "New York",
                            Country = "USA",
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(3968),
                            FullAddress = "123 Main St",
                            IsDeleted = false,
                            PostalCode = 10001,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            City = "Los Angeles",
                            Country = "USA",
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(3975),
                            FullAddress = "456 Elm St",
                            IsDeleted = false,
                            PostalCode = 90001,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            City = "Chicago",
                            Country = "USA",
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(3979),
                            FullAddress = "789 Pine St",
                            IsDeleted = false,
                            PostalCode = 60007,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            City = "Houston",
                            Country = "USA",
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(3983),
                            FullAddress = "321 Oak St",
                            IsDeleted = false,
                            PostalCode = 77001,
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            City = "Phoenix",
                            Country = "USA",
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(3986),
                            FullAddress = "654 Maple St",
                            IsDeleted = false,
                            PostalCode = 85001,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DAL.Entities.ExtraItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AdditionalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExtraItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalPrice = 1.0,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4064),
                            IsDeleted = false,
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = 2,
                            AdditionalPrice = 1.5,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4068),
                            IsDeleted = false,
                            Name = "Bacon"
                        },
                        new
                        {
                            Id = 3,
                            AdditionalPrice = 1.25,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4071),
                            IsDeleted = false,
                            Name = "Mushrooms"
                        },
                        new
                        {
                            Id = 4,
                            AdditionalPrice = 2.0,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4074),
                            IsDeleted = false,
                            Name = "Avocado"
                        },
                        new
                        {
                            Id = 5,
                            AdditionalPrice = 0.75,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4077),
                            IsDeleted = false,
                            Name = "Onions"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderCount")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4156),
                            Description = "Juicy beef burger",
                            IsDeleted = false,
                            Name = "Burger",
                            OrderCount = 10,
                            Price = 8.9900000000000002,
                            ViewCount = 50
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4162),
                            Description = "Cheese and pepperoni",
                            IsDeleted = false,
                            Name = "Pizza",
                            OrderCount = 20,
                            Price = 12.99,
                            ViewCount = 100
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4166),
                            Description = "Creamy Alfredo pasta",
                            IsDeleted = false,
                            Name = "Pasta",
                            OrderCount = 15,
                            Price = 10.99,
                            ViewCount = 75
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4170),
                            Description = "Fresh garden salad",
                            IsDeleted = false,
                            Name = "Salad",
                            OrderCount = 8,
                            Price = 7.9900000000000002,
                            ViewCount = 40
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4174),
                            Description = "Spicy chicken tacos",
                            IsDeleted = false,
                            Name = "Tacos",
                            OrderCount = 12,
                            Price = 9.9900000000000002,
                            ViewCount = 60
                        });
                });

            modelBuilder.Entity("DAL.Entities.MenuDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExtraItemId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExtraItemId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4254),
                            ExtraItemId = 1,
                            IsDeleted = false,
                            MenuId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4258),
                            ExtraItemId = 2,
                            IsDeleted = false,
                            MenuId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4261),
                            ExtraItemId = 3,
                            IsDeleted = false,
                            MenuId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4264),
                            ExtraItemId = 4,
                            IsDeleted = false,
                            MenuId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4267),
                            ExtraItemId = 5,
                            IsDeleted = false,
                            MenuId = 5
                        });
                });

            modelBuilder.Entity("DAL.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MenuDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderSize")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("MenuDetailId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4341),
                            IsDeleted = false,
                            MenuDetailId = 1,
                            OrderSize = 3,
                            Quantity = 2,
                            TotalPrice = 19.98
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4347),
                            IsDeleted = false,
                            MenuDetailId = 2,
                            OrderSize = 2,
                            Quantity = 1,
                            TotalPrice = 12.99
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4352),
                            IsDeleted = false,
                            MenuDetailId = 3,
                            OrderSize = 1,
                            Quantity = 3,
                            TotalPrice = 32.969999999999999
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 4,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4356),
                            IsDeleted = false,
                            MenuDetailId = 4,
                            OrderSize = 3,
                            Quantity = 2,
                            TotalPrice = 15.98
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 5,
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(4360),
                            IsDeleted = false,
                            MenuDetailId = 5,
                            OrderSize = 2,
                            Quantity = 1,
                            TotalPrice = 9.9900000000000002
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(3635),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            IsAdmin = true,
                            IsDeleted = false,
                            LastName = "User",
                            Password = "admin123",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(3639),
                            Email = "john@example.com",
                            FirstName = "John",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastName = "Doe",
                            Password = "password123",
                            Username = "john"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1985, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(3644),
                            Email = "jane@example.com",
                            FirstName = "Jane",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastName = "Smith",
                            Password = "password123",
                            Username = "jane"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1975, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(3649),
                            Email = "michael@example.com",
                            FirstName = "Michael",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastName = "Brown",
                            Password = "password123",
                            Username = "michael"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1995, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 8, 9, 14, 42, 25, 641, DateTimeKind.Local).AddTicks(3654),
                            Email = "emily@example.com",
                            FirstName = "Emily",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastName = "Clark",
                            Password = "password123",
                            Username = "emily"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Address", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.MenuDetail", b =>
                {
                    b.HasOne("DAL.Entities.ExtraItem", "ExtraItem")
                        .WithMany("MenuDetails")
                        .HasForeignKey("ExtraItemId");

                    b.HasOne("DAL.Entities.Menu", "Menu")
                        .WithMany("MenuDetails")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraItem");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("DAL.Entities.Order", b =>
                {
                    b.HasOne("DAL.Entities.Address", "Address")
                        .WithMany("Orders")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.MenuDetail", "MenuDetail")
                        .WithMany("Orders")
                        .HasForeignKey("MenuDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("MenuDetail");
                });

            modelBuilder.Entity("DAL.Entities.Address", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DAL.Entities.ExtraItem", b =>
                {
                    b.Navigation("MenuDetails");
                });

            modelBuilder.Entity("DAL.Entities.Menu", b =>
                {
                    b.Navigation("MenuDetails");
                });

            modelBuilder.Entity("DAL.Entities.MenuDetail", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
